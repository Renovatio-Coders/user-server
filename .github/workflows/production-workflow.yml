
name: Production CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.0

      - name: Set up JDK 21
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.5'

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Upload Build Artifact (JAR)
        uses: actions/upload-artifact@v4.0.0
        with:
          name: build-artifacts
          path: build/libs/*.jar  # JAR 파일을 아티팩트로 저장

  # docker-build:
  #   runs-on: ubuntu-22.04
  #   needs: build  # build Job이 끝난 후 실행됨
  #   permissions:
  #     contents: read

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4.2.0

  #     - name: Download Build Artifact (JAR)
  #       uses: actions/download-artifact@v4.0.0
  #       with:
  #         name: build-artifacts
  #         path: app/  # JAR 파일을 다운로드하여 app/ 디렉토리에 저장

  #     - name: Build Docker Image
  #       run: |
  #         docker build -t myrepo/myapp:latest .
  #         docker tag myrepo/myapp:latest myrepo/myapp:${{ github.sha }}

  #     - name: Login to Docker Hub
  #       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

  #     - name: Push Docker Image
  #       run: |
  #         docker push myrepo/myapp:latest
  #         docker push myrepo/myapp:${{ github.sha }}
